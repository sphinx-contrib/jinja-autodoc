[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "jinja_autodoc"
version = "0.1.0"
description = "Jinja domain for jinja templates"
readme = "README.md"
license = {text = "BSD License"}
requires-python = ">=3.9"
authors = [
  {name = "Jaka Hudoklin", email = "jakahudoklin@gmail.com"},
]
maintainers = [
  {name = "Ã‰loi Rivard", email = "eloi.rivard@nubla.fr"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Documentation",
    "Topic :: Utilities",
]
dependencies = [
    "jinja2>=3.0.0",
    "sphinx>=7.4.0",
]

[project.urls]
documentation = "https://jinja-autodoc.readthedocs.io"
repository = "https://github.com/yaal-coop/jinja-autodoc"

[dependency-groups]
dev = [
    "beautifulsoup4>=4.12.3",
    "mypy>=1.13.0",
    "pre-commit-uv>=4.1.4",
    "pytest>=8.3.4",
    "pytest-regressions>=2.5.0",
    "tox-uv>=1.16.0",
    "pytest-cov>=6.0.0",
    "types-docutils>=0.21.0.20241128",
]

doc = [
    "shibuya>=2024.10.15",
    "sphinx>=7.4.0",
]

[tool.hatch.build.targets.wheel]
only-include = ["jinja_autodoc"]

[tool.ruff.lint]
select = [
    "B", # flake8-bugbear
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
]
ignore = [
    "E501", # line-too-long
    "E722", # bare-except
    "D100", # public module
    "D101", # public class
    "D102", # public method
    "D103", # public function
    "D104", # public package
    "D105", # magic method
    "D106", # nested class
    "D107", # public init
    "D203", # no-blank-line-before-class
    "D213", # multi-line-summary-second-line
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
packages = ["jinja_autodoc"]
ignore_missing_imports = true

[tool.tox]
requires = ["tox>=4.19"]
env_list = [
    "py39",
    "py310",
    "py311",
    "py312",
    "py313",
    "minversions",
    "coverage",
    "style",
    "doc",
]

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
dependency_groups = ["dev"]
commands = [
    ["pytest", "--showlocals", "--full-trace", "{posargs}"],
]

[tool.tox.env.style]
skip_install = true
runner = "uv-venv-runner"
commands = [
    ["pre-commit", "run", "--all-files", "--show-diff-on-failure"],
]

[tool.tox.env.doc]
dependency_groups = ["doc"]
commands = [
    ["sphinx-build", "--builder", "html", "--write-all", "--nitpicky", "doc", "build/sphinx/html"],
]

[tool.tox.env.minversions]
runner = "uv-venv-runner"
uv_resolution = "lowest-direct"

[tool.tox.env.coverage]
commands = [
    ["pytest", "--cov", "--cov-fail-under=100", "--cov-report", "term:skip-covered", "{posargs}"],
    ["coverage", "html"],
]
